import json
from web3 import Web3
import hashlib
ganache_url="http://127.0.0.1:7545"

web3=Web3(Web3.HTTPProvider(ganache_url))
web3.eth.defaultAccount=web3.eth.accounts[0]
abi=json.loads('[{"inputs":[],"name":"calculate_amount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"Employer","type":"string"},{"internalType":"string","name":"Employee","type":"string"},{"internalType":"uint256","name":"nola","type":"uint256"},{"internalType":"uint256","name":"elp","type":"uint256"},{"internalType":"uint256","name":"hr","type":"uint256"},{"internalType":"uint256","name":"isbonus","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"bonusamount","type":"uint256"},{"internalType":"uint256","name":"overdue","type":"uint256"}],"name":"setdata","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"setorderstatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"setpaymentstatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"leaves","type":"uint256"},{"internalType":"uint256","name":"hoursworked","type":"uint256"}],"name":"setpostcontractdata","outputs":[],"stateMutability":"payable","type":"function"}]')
bytecode='6080604052600080556000600155600060025560006003556000600460006101000a81548160ff0219169083151502179055506000600460016101000a81548160ff0219169083151502179055506000600460026101000a81548160ff0219169083151502179055506040518060400160405280600481526020017f6e6f6e6500000000000000000000000000000000000000000000000000000000815250600590805190602001906100b392919061012b565b506040518060400160405280600481526020017f6e6f6e6500000000000000000000000000000000000000000000000000000000815250600690805190602001906100ff92919061012b565b506000600755600060085560006009556000600a556000600b5534801561012557600080fd5b506101d6565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261016157600085556101a8565b82601f1061017a57805160ff19168380011785556101a8565b828001600101855582156101a8579182015b828111156101a757825182559160200191906001019061018c565b5b5090506101b591906101b9565b5090565b5b808211156101d25760008160009055506001016101ba565b5090565b6104dc806101e56000396000f3fe60806040526004361061004a5760003560e01c806303bf0a861461004f57806318db29c8146100875780633c4371f6146100b25780639aa94464146100d2578063df72035a146100f2575b600080fd5b6100856004803603604081101561006557600080fd5b81019080803590602001909291908035906020019092919050505061028b565b005b34801561009357600080fd5b5061009c6102b8565b6040518082815260200191505060405180910390f35b6100ba61032e565b60405180821515815260200191505060405180910390f35b6100da610352565b60405180821515815260200191505060405180910390f35b610289600480360361012081101561010957600080fd5b810190808035906020019064010000000081111561012657600080fd5b82018360208201111561013857600080fd5b8035906020019184600183028401116401000000008311171561015a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101bd57600080fd5b8201836020820111156101cf57600080fd5b803590602001918460018302840111640100000000831117156101f157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610376565b005b80600981905550816008819055506000600460026101000a81548160ff0219169083151502179055505050565b6000806000905060015460095411156102dc57600154600054029050600b54810390505b60015460095410156102f2576009546000540290505b6002546008541115610314576000600254600854039050600354810282039150505b6001600754141561032757600a54810190505b8091505090565b60006001600460006101000a81548160ff0219169083151502179055506001905090565b60006001600460016101000a81548160ff0219169083151502179055506001905090565b886005908051906020019061038c9291906103fb565b5087600690805190602001906103a39291906103fb565b506001600460026101000a81548160ff021916908315150217905550866002819055508560038190555084600081905550836007819055508260018190555081600a8190555080600b81905550505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826104315760008555610478565b82601f1061044a57805160ff1916838001178555610478565b82800160010185558215610478579182015b8281111561047757825182559160200191906001019061045c565b5b5090506104859190610489565b5090565b5b808211156104a257600081600090555060010161048a565b509056fea2646970667358221220e187c85f5228ef2028edbe0c6fdd1280d389feaf610a7c81f2af286ef6da787164736f6c63430007040033'
# Deal = web3.eth.contract(abi=abi,bytecode=bytecode)

# tx_hash=Deal.constructor().transact()
# print(tx_hash)

# tx_receipt= web3.eth.waitForTransactionReceipt(tx_hash)

# print(tx_receipt)

contract1=web3.eth.contract(
    address="0x04c268AF8bb843ebAc874c9ceB3bEee9050Ac878",
    
    abi=abi
)

x=contract1.functions.setdata("Pashva","Owais",3,100,100,False,40,4,45,500,500).transact()
x=contract1.functions.calculate_amount().call()

print(x)